version: '3.8'

services:

  business-central:
    image: jboss/business-central-workbench-showcase:7.43.0.Final
    container_name: business-central
    restart: always
    ports:
    - 8080:8080
    - 8001:8001
    environment:
      - "JAVA_OPTS=-Dorg.uberfire.nio.git.hooks=/opt/jboss/wildfly/bin/.niogit/MySpace/DemoLoans.git/hooks -Ddatasource.management.disableDefaultDrivers=false"
    networks: 
      my_net:
        ipv4_address: 172.28.0.2
    volumes:
      - "~/wbgit:/opt/jboss/wildfly/bin/.niogit"
      - "~/.m2:/opt/jboss/.m2"
    
  # kie-server:
  #   image: jboss/kie-server-showcase
  #   container_name: kie-server
  #   restart: always
  #   environment:
  #     KIE_SERVER_LOCATION: http://kie-server:8080/kie-server/services/rest/server
  #     KIE_SERVER_CONTROLLER: http://business-central:8080/business-central/rest/controller
  #     KIE_MAVEN_REPO: http://business-central:8080/business-central/maven2
  #   networks: 
  #     my_net:
  #       ipv4_address: 172.28.0.3
  #   ports:
  #     - 8180:8080
  #   depends_on:
  #     - business-central

  db:
    image: mariadb
    container_name: brm-mariadb
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=123123a@
      - MYSQL_ROOT_USERNAME=root
      - MYSQL_PASSWORD=123123a@
      - MYSQL_USER=business_rule
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --max-allowed-packet=1073741824
      - --wait_timeout=600
      - --net_read_timeout=600
      - --net_write_timeout=600
      - --connect_timeout=60
      - --lower_case_table_names=1
    networks:
      my_net:
        ipv4_address: 172.28.0.4
    ports:
      - 3306:3306
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    depends_on: 
      - business-central

  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    restart: always
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo1/data:/data
      - ./zk-single-kafka-single/zoo1/datalog:/datalog
    networks:
      my_net:
        ipv4_address: 172.28.0.6

  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      my_net:
        ipv4_address: 172.28.0.8

  app0:
    image: localhost:5000/apps/business-application-service
    hostname: app0
    ports: 
      - "8090:8090"
    command: java -Dorg.kie.server.controller.user=wbadmin -Dorg.kie.server.controller.pwd=wbadmin -jar /deployments/business-application-service-1.0-SNAPSHOT.jar
    environment:
      KIE_SERVER_ADDRESS: 172.28.0.9
      KIE_SERVER_PORT: 8090
      KIE_CONTROLLER_SERVER_ADDRESS: 172.28.0.2
      KIE_CONTROLLER_SERVER_PORT: 8080
      DATABASE_USERNAME: business_rule
      DATABASE_PASSWORD: 123123a@
      DATABASE_HOST: 172.28.0.4
      DATABASE_PORT: 3306
      DATABASE_NAME: business_rule
      KAFKA_BOOTSTRAP_SERVER: kafka1:19092
    depends_on:
      - business-central
    networks:
      my_net:
        ipv4_address: 172.28.0.9
    volumes:
      - "~/.m2:/opt/jboss/.m2"
    extra_hosts: 
      kafka1: 172.28.0.8
    labels: 
      - "traefik.enable=true"
      - "traefik.http.services.app.loadbalancer.server.port=8090"
      - "traefik.http.routers.router0.rule=PathPrefix(`/`)"

  # app1:
  #   image: localhost:5000/apps/business-application-service
  #   hostname: app1
  #   ports: 
  #     - "8091:8091"
  #   command: java -Dorg.kie.server.controller.user=wbadmin -Dorg.kie.server.controller.pwd=wbadmin -jar /deployments/business-application-service-1.0-SNAPSHOT.jar
  #   environment: 
  #     KIE_SERVER_ADDRESS: 172.28.0.10
  #     KIE_SERVER_PORT: 8091
  #     KIE_CONTROLLER_SERVER_ADDRESS: 172.28.0.2
  #     KIE_CONTROLLER_SERVER_PORT: 8080
  #     DATABASE_USERNAME: business_rule
  #     DATABASE_PASSWORD: 123123a@
  #     DATABASE_HOST: 172.28.0.4
  #     DATABASE_PORT: 3306
  #     DATABASE_NAME: business_rule
  #     KAFKA_BOOTSTRAP_SERVER: kafka1:19092
  #   depends_on:
  #     - business-central
  #   networks:
  #     my_net:
  #       ipv4_address: 172.28.0.10
  #   volumes:
  #     - "~/.m2:/opt/jboss/.m2"
  #   extra_hosts: 
  #     kafka1: 172.28.0.8
  #   labels: 
  #     - "traefik.enable=true"
  #     - "traefik.http.services.app.loadbalancer.server.port=8091"
  #     - "traefik.http.routers.router0.rule=PathPrefix(`/`)"

  # app2:
  #   image: localhost:5000/apps/business-application-service
  #   hostname: app2
  #   ports: 
  #     - "8092:8092"
  #   command: java -Dorg.kie.server.controller.user=wbadmin -Dorg.kie.server.controller.pwd=wbadmin -jar /deployments/business-application-service-1.0-SNAPSHOT.jar
  #   environment: 
  #     KIE_SERVER_ADDRESS: 172.28.0.11
  #     KIE_SERVER_PORT: 8092
  #     KIE_CONTROLLER_SERVER_ADDRESS: 172.28.0.2
  #     KIE_CONTROLLER_SERVER_PORT: 8080
  #     DATABASE_USERNAME: business_rule
  #     DATABASE_PASSWORD: 123123a@
  #     DATABASE_HOST: 172.28.0.4
  #     DATABASE_PORT: 3306
  #     DATABASE_NAME: business_rule
  #     KAFKA_BOOTSTRAP_SERVER: kafka1:19092
  #   depends_on:
  #     - business-central
  #   networks:
  #     my_net:
  #       ipv4_address: 172.28.0.11
  #   volumes:
  #     - "~/.m2:/opt/jboss/.m2"
  #   extra_hosts: 
  #     kafka1: 172.28.0.8
  #   labels: 
  #     - "traefik.enable=true"
  #     - "traefik.http.services.app.loadbalancer.server.port=8092"
  #     - "traefik.http.routers.router0.rule=PathPrefix(`/`)"

  # reverse-proxy:
  #   # The official v2 Traefik docker image
  #   image: traefik:v2.3
  #   depends_on: 
  #     - "app0"
  #     - "app1"
  #     # - "app2"
  #   # Enables the web UI and tells Traefik to listen to docker
  #   environment: 
  #     NO_PROXY: 172.28.0.0/16
  #   command: 
  #     - "--api.insecure=true"
  #     - "--providers.docker=true"
  #     - "--entryPoints.re.address=:8885"
  #     - "--log.level=DEBUG"
  #   ports:
  #     # The HTTP port
  #     - "8885:8885"
  #     # The Web UI (enabled by --api.insecure=true)
  #     - "8880:8080"
  #   volumes:
  #     # So that Traefik can listen to the Docker events
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   networks: 
  #     my_net:
  #       ipv4_address: 172.28.0.16

networks: 
  my_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16